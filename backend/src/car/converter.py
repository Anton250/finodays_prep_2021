BRANDS = {
    'Toyota': 0,
    'LADA (ВАЗ)': 1,
    'Daewoo': 2,
    'Chevrolet': 3,
    'Kia': 4,
    'Nissan': 5,
    'Volkswagen': 6,
    'Infiniti': 7,
    'BMW': 8,
    'Mitsubishi': 9,
    'Mazda': 10,
    'Lexus': 11,
    'Opel': 12,
    'Skoda': 13,
    'Volvo': 14,
    'Audi': 15,
    'Hyundai': 16,
    'Rover': 17,
    'Ford': 18,
    'Mercedes-Benz': 19,
    'Peugeot': 20,
    'Honda': 21,
    'УАЗ': 22,
    'SsangYong': 23,
    'ГАЗ': 24,
    'Москвич': 25,
    'Hummer': 26,
    'ЗАЗ': 27,
    'Austin': 28,
    'ИЖ': 29,
    'Lifan': 30,
    'Fiat': 31,
    'Subaru': 32,
    'Jeep': 33,
    'Renault': 34,
    'Chrysler': 35,
    'Maybach': 36,
    'Suzuki': 37,
    'Cadillac': 38,
    'Chery': 39,
    'Citroen': 40,
    'Land Rover': 41,
    'Great Wall': 42,
    'Acura': 43,
    'Datsun': 44,
    'Haima': 45,
    'ЛуАЗ': 46,
    'Jaguar': 47,
    'Vortex': 48,
    'DW Hower': 49,
    'Porsche': 50,
    'Lincoln': 51,
    'MINI': 52,
    'Dodge': 53,
    'Daihatsu': 54,
    'Maserati': 55,
    'ТагАЗ': 56,
    'FAW': 57,
    'Geely': 58,
    'RAM': 59,
    'Isuzu': 60,
    'Ravon': 61,
    'Plymouth': 62,
    'JAC': 63,
    'BYD': 64,
    'Haval': 65,
    'SEAT': 66,
    'Saab': 67,
    'ZX': 68,
    'Brilliance': 69,
    'AMC': 70,
    'DongFeng': 71,
    'Lancia': 72,
    'Smart': 73,
    'Genesis': 74,
    'PUCH': 75,
    'Lamborghini': 76,
    'Tianye': 77,
    'Simca': 78,
    'Bentley': 79,
    'Tianma': 80,
    'Alfa Romeo': 81,
    'Aro': 82,
    'Dacia': 83,
    'Pontiac': 84,
    'Aston Martin': 85,
    'Luxgen': 86,
    'Willys': 87,
    'Rolls-Royce': 88,
    'GMC': 89,
    'Oldsmobile': 90,
    'Shanghai Maple': 91,
    'TATA': 92,
    'Foton': 93,
    'Mercury': 94,
    'Packard': 95,
    'Saturn': 96,
    'Scion': 97,
    'Borgward': 98,
    'MG': 99,
    'Doninvest': 100,
    'Geo': 101,
    'Changan': 102,
    'Tatra': 103,
    'Ferrari': 104,
    'Автокам': 105,
    'Buick': 106,
    'Adler': 107,
    'Alpina': 108,
    'Wanderer': 109,
    'Asia': 110,
    'СМЗ': 111,
    'Derways': 112,
    'Proton': 113,
    'Hafei': 114,
    'Wartburg': 115,
    'DS': 116,
    'Jinbei': 117,
    'Eagle': 118,
    'Renault Samsung': 119,
    'Trabant': 120,
    'GAC': 121,
    'Dadi': 122,
    'ЗИЛ': 123,
    'Fisker': 124,
    'AC': 125,
    'Chana': 126,
    'Yulon': 127,
    'Daimler': 128,
    'Mahindra': 129,
    'DKW': 130,
    'Brabus': 131,
    'Hudson': 132,
    'ShuangHuan': 133,
    'ChangFeng': 134,
    'Hawtai': 135,
    'Triumph': 136,
    'LTI': 137,
    'Marussia': 138,
    'Delage': 139,
    'ЗиС': 140,
    'Bugatti': 141,
    'Канонир': 142,
    'McLaren': 143,
    'Excalibur': 144,
    'Vauxhall': 145,
    'Maruti': 146,
    'Metrocab': 147,
    'Changhe': 148,
    'Ligier': 149,
    'Heinkel': 150,
    'Mitsuoka': 151,
    'JMC': 152,
    'FSO': 153,
    'IVECO': 154,
    'Lotus': 155,
    'Hanomag': 156
}
WHEELS = {'Правый': 0, 'Левый': 1}
DRIVES = {'передний': 0, 'задний': 1, 'полный': 2}
BODY_TYPES = {
    'Хэтчбек 5 дв.': 0,
    'Седан': 1,
    'Внедорожник 5 дв.': 2,
    'Универсал 5 дв.': 3,
    'Фургон': 4,
    'Лифтбек': 5,
    'Минивэн': 6,
    'Компактвэн': 7,
    'Хэтчбек 3 дв.': 8,
    'Внедорожник 3 дв.': 9,
    'Купе': 10,
    'Родстер': 11,
    'Пикап Двойная кабина': 12,
    'Микровэн': 13,
    'Внедорожник открытый': 14,
    'Седан 2 дв.': 15,
    'Седан-хардтоп': 16,
    'Купе-хардтоп': 17,
    'Фастбек': 18,
    'Пикап Полуторная кабина': 19,
    'Кабриолет': 20,
    'Пикап Одинарная кабина': 21,
    'Хэтчбек 4 дв.': 22,
    'Фаэтон': 23,
    'Лимузин': 24,
    'Тарга': 25,
    'Спидстер': 26,
    'Универсал 3 дв.': 27
}
FUEL_TYPES = {'бензин': 0, 'дизель': 1, 'гибрид': 2, 'электро': 3, 'СУГ': 4}
PTSS = {'Оригинал': 0, 'Дубликат': 1}
TRANSMISSIONS = {'автоматическая': 0, 'механическая': 1, 'вариатор': 2, 'роботизированная': 3}

class ValuesGetter:
    def get_brand(self, key):
        return BRANDS[key]

    def get_wheel(self, key):
        return WHEELS[key]

    def get_drive(self, key):
        return DRIVES[key]
    
    def get_body_type(self, key):
        return BODY_TYPES[key]

    def get_fuel_type(self, key):
        return FUEL_TYPES[key]

    def get_pts(self, key):
        return PTSS[key]

    def get_transmission(self, key):
        return TRANSMISSIONS[key]
